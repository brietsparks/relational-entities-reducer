const { createEntityReducer } = require('./entity-reducer');
const { createEntityActions } = require('../actions');

describe('createEntityReducer', () => {
  const schemas = {
    skill: {
      type: 'skill',
      plural: 'skills',
    },
    project: {
      type: 'project',
      plural: 'projects'
    }
  };

  const actions = createEntityActions(schemas);
  const reducer = createEntityReducer(schemas.skill, actions);

  describe('add', () => {
    test('skip other types', () => {
      const state = {};
      const action = actions.add('project', 'p1');

      const actual = reducer(state, action);

      expect(actual).toEqual(state);
    });

    test('add entity', () => {
      const state = {};
      const action = actions.add('skill', 's1', { id: 's1' });

      const actual = reducer(state, action);
      const expected = { 's1': { id: 's1' } };

      expect(actual).toEqual(expected);
    });

    test('', () => {

    });
  });
});
